definitions:
  app.Response:
    properties:
      code:
        description: 错误码
        type: integer
      data:
        description: 详细错误信息
        type: string
      msg:
        description: 错误信息
        type: string
    type: object
  models.AddArticleForm:
    properties:
      content:
        type: string
      coverImageUrl:
        type: string
      createdBy:
        type: string
      desc:
        type: string
      state:
        type: integer
      tagID:
        type: integer
      title:
        type: string
    type: object
  models.AddTagForm:
    properties:
      createdBy:
        type: string
      name:
        type: string
      state:
        type: integer
    type: object
  models.Authority:
    properties:
      authority_id:
        description: 权限ID
        type: string
      authority_name:
        description: 角色名
        type: string
      parent_id:
        description: 父角色ID
        type: string
    type: object
  models.Command:
    properties:
      cmd:
        type: string
    type: object
  models.ExportTagForm:
    properties:
      name:
        type: string
      state:
        type: integer
    type: object
  models.UserLogin:
    properties:
      password:
        type: string
      username:
        description: |-
          10003 账号不存在
          20001 30002 登录异常
          400 参数错误
          40002 用户不存在
          40003 账号密码错误
        type: string
    type: object
  models.UserPolicy:
    properties:
      type:
        type: string
      url:
        type: string
      username:
        type: string
    type: object
  models.UserRegister:
    properties:
      company_id:
        type: string
      nickname:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: Go 学习综合demo
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: code server
  version: 0.0.1
paths:
  /alive:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 检查token是否过期
      tags:
      - 鉴权
  /articles/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: 文章ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 查询文章
      tags:
      - 文章
  /articles/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.AddArticleForm'
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 添加文章
      tags:
      - 文章
  /articles/all:
    get:
      consumes:
      - application/json
      parameters:
      - description: TagID
        in: body
        name: tag_id
        schema:
          type: integer
      - description: state
        in: body
        name: state
        schema:
          type: integer
      - description: CreatedBy
        in: body
        name: created_by
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 查询多篇文章
      tags:
      - 文章
  /articles/poster/generate:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 生成海报
      tags:
      - 文章
  /auth:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      summary: 登录获取登录token 信息
      tags:
      - 鉴权
  /authority/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Authority'
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 创建角色
      tags:
      - 角色
  /authority/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 删除角色
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Authority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除角色
      tags:
      - 角色
  /authority/set:
    post:
      consumes:
      - application/json
      parameters:
      - description: 设置角色资源权限
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Authority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置角色资源权限
      tags:
      - 角色
  /authority/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: 权限id, 权限名, 父角色id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Authority'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":200,"data":{},"msg":"ok"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新角色信息
      tags:
      - 角色
  /cmd/set:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.Command'
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 控制指令
      tags:
      - 控制
  /policy:
    delete:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UserPolicy'
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除访问权限
      tags:
      - 访问权限
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取权限列表
      tags:
      - 访问权限
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UserPolicy'
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 增加访问权限
      tags:
      - 访问权限
  /tags/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.AddTagForm'
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 添加标签
      tags:
      - 标签
  /tags/all:
    get:
      consumes:
      - application/json
      parameters:
      - description: Name
        in: query
        name: name
        type: string
      - description: state
        in: query
        name: state
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 查询多个标签
      tags:
      - 标签
  /tags/export:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        schema:
          $ref: '#/definitions/models.ExportTagForm'
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 导出标签
      tags:
      - 标签
  /tags/import:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 导入标签
      tags:
      - 标签
  /upload_file:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 上传文件
      tags:
      - 上传下载
  /upload_img:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 上传图片
      tags:
      - 上传下载
  /user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取所有用户
      tags:
      - 用户
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UserRegister'
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 增加用户
      tags:
      - 用户
  /user/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UserRegister'
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 刪除用户
      tags:
      - 用户
  /user/get:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuthc: []
      summary: 获取单一用户
      tags:
      - 用户
  /user/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UserRegister'
      produces:
      - application/json
      responses:
        "200":
          description: '{ "code": 200, "data": {}, "msg": "ok" }'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新用户信息
      tags:
      - 用户
  /ws:
    get:
      consumes:
      - application/json
      - application/json
      produces:
      - application/json
      - application/json
      summary: Websocket接口, 支持订阅机器人状态、任务状态、任务倒计时信息
      tags:
      - websocket
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
